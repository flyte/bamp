sast:
  image: docker:stable
  variables:
    DOCKER_DRIVER: overlay2
  allow_failure: true
  services:
    - docker:stable-dind
  script:
    - export SP_VERSION=$(echo "$CI_SERVER_VERSION" | sed 's/^\([0-9]*\)\.\([0-9]*\).*/\1-\2-stable/')
    - docker run
        --env SAST_CONFIDENCE_LEVEL="${SAST_CONFIDENCE_LEVEL:-3}"
        --volume "$PWD:/code"
        --volume /var/run/docker.sock:/var/run/docker.sock
        "registry.gitlab.com/gitlab-org/security-products/sast:$SP_VERSION" /app/bin/run /code
  artifacts:
    reports:
      sast: gl-sast-report.json

dependency_scanning:
  image: docker:stable
  variables:
    DOCKER_DRIVER: overlay2
  allow_failure: true
  services:
    - docker:stable-dind
  script:
    - export SP_VERSION=$(echo "$CI_SERVER_VERSION" | sed 's/^\([0-9]*\)\.\([0-9]*\).*/\1-\2-stable/')
    - docker run
        --env DEP_SCAN_DISABLE_REMOTE_CHECKS="${DEP_SCAN_DISABLE_REMOTE_CHECKS:-false}"
        --volume "$PWD:/code"
        --volume /var/run/docker.sock:/var/run/docker.sock
        "registry.gitlab.com/gitlab-org/security-products/dependency-scanning:$SP_VERSION" /code
  artifacts:
    reports:
      dependency_scanning: gl-dependency-scanning-report.json

test-py27:
  stage: test
  image: python:2.7
  script:
    - pip install "tox>3,<4"
    - tox -e py27

test-py35:
  stage: test
  image: python:3.5
  script:
     - pip install "tox>3,<4"
     - tox -e py35

test-py36:
  stage: test
  image: python:3.6
  script:
    - pip install "tox>3,<4"
    - tox -e py36

test-py37:
  stage: test
  image: python:3.7
  script:
    - pip install "tox>3,<4"
    - tox -e py37

# only tagged releases
publish:
  stage: deploy
  image: python:3.7
  only:
    - /^v\d+\.\d+\.\d+$/  # eg. "v1.2.3", "v1.0.12" etc.
  except:
    - branches
  environment:
    name: pypi
  script:
    - pip install --upgrade pip
    - pip install --upgrade setuptools
    - pip install "twine>1,<2"
    - python setup.py sdist bdist_wheel
    - twine upload dist/*
  artifacts:
    paths:
      - dist/
    expire_in: 1 month
